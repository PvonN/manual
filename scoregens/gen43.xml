
<refentry id="GEN43">
      <indexterm id="IndexGEN43"><primary>GEN43</primary></indexterm>
  <refmeta>
    <refentrytitle>GEN43</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>GEN43</refname>
    <refpurpose>
      Loads a PVOCEX file containing a PV analysis.
    </refpurpose>
  </refnamediv>
  
  <refsect1>
    <title>Description</title>
    <para>
This subroutine loads a PVOCEX file containing the PV analysis (amp-freq)
of a soundfile and calculates the average magnitudes of all analysis frames
of one or all audio channels. It then creates a table with these magnitudes
for each PV bin.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis><command>f</command> # time size 43 filecod channel</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialisation</title>
    <para>
    <emphasis>size</emphasis> -- number of points in the table,
    power-of-two or power-of-two plus 1.  
      GEN 43 does not make any distinction between these two sizes, but it
      requires the table to be at least the fftsize/2. PV bins cover the
      positive spectrum from 0Hz (table index 0) to the Nyquist (table index
      fftsize/2+1) in equal-size frequency increments (of size sr/fftsize).
    </para>

    <para>
      <emphasis>filcod</emphasis> -- a pvocex file (which can be generated
       by pvanal).
    </para>

    <para>
      <emphasis>channel</emphasis> -- audio channel number from which
      the magnitudes will be extracted; a 0 will average the
      magnitudes from all channels. 
    </para>

    <para>
     Reading stops at the end of the file.
    </para>

    <note>
      <title>Note</title>
      <para>if p4 is positive, the table will be post-normalised.  A
      negative p4 will cause post-normalisation to be skipped. 
      </para>
    </note>
  </refsect1>
  
  <refsect1>
    <title>Examples</title>  
   <para>
	 Here is an example of the GEN43 routine. It uses the files <ulink url="examples/gen43.csd"><citetitle>gen43.csd</citetitle></ulink>.
   </para>
   <para>
   Note: In this example, the .csd uses the ‘system_i’ opcode to launch and run the pvanal utility and analyze a section from the sound file, finneganswake1.flac, where we find a bit of reverb and noise. 
   The ‘reverbnoise’ selection has a duration of 0.8 seconds (-d0.8) which we find after 1.04 seconds of the source (-b1.04) and thus pvanal creates the pvocex file that we use in instrument 3 to remove this noise and reverb from the original with the pvstencil opcode.
    
      <example>
        <title>An example of the GEN43 routine.</title>
        <xi:include href="examples-xml/gen43.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
   </para>
	      
    <para>
	 These tables can be used as a masking table for pvstencil and pvsmaska.
       <programlisting><emphasis role="stamnt">f</emphasis>1 0 512   43  "viola.pvx" 1
<emphasis role="stamnt">f</emphasis>1 0 -1024 -43 "noiseprint.pvx" 0</programlisting>
</para>
<para>
The first example uses a 1024-point FFT phase vocoder analysis file from which
the first channel is used. The second uses all channels of a 2048-point
file, without post-normalisation. For noise reduction applications with
pvstencil, it is easiest to skip table normalisation (negative GEN code).
    </para>
  </refsect1>
	      
  <refsect1>
    <title>Credits</title>
    <para>Author: &namevictor;</para>
  </refsect1>
</refentry>
